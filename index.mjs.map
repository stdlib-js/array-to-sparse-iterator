{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in a sparse array-like object.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = sparsearray2iterator( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*/\nfunction sparsearray2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar len;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tlen = src.length;\n\t\ti += 1;\n\t\twhile ( i < len && get( src, i ) === void 0 ) {\n\t\t\ti += 1;\n\t\t}\n\t\tif ( i >= len ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar len;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tlen = src.length;\n\t\ti += 1;\n\t\twhile ( i < len && get( src, i ) === void 0 ) {\n\t\t\ti += 1;\n\t\t}\n\t\tif ( i >= len ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn sparsearray2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn sparsearray2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = sparsearray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from a sparse array-like value.\n*\n* @module @stdlib/array-to-sparse-iterator\n*\n* @example\n* var sparsearray2iterator = require( '@stdlib/array-to-sparse-iterator' );\n*\n* var iter = sparsearray2iterator( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n"],"names":["setReadOnly","require$$0","isFunction","require$$1","isCollection","require$$2","iteratorSymbol","require$$3","arraylike2object","require$$4","format","require$$5","main","sparsearray2iterator","src","thisArg","iter","FLG","fcn","get","i","TypeError","arguments","length","next1","next2","end","factory","getter","len","done","value","call","lib"],"mappings":";;kiBAsBA,IAAIA,EAAcC,EACdC,EAAaC,EACbC,EAAeC,EACfC,EAAiBC,EACjBC,EAAmBC,EACnBC,EAASC,EAiKb,IAAAC,EAtIA,SAASC,EAAsBC,GAC9B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMhB,EAAcU,GACnB,MAAM,IAAIO,UAAWX,EAAQ,8EAA+EI,IAE7G,GAAKQ,UAAUC,OAAS,EAAI,CAE3B,IAAMrB,EADNgB,EAAMI,UAAW,IAEhB,MAAM,IAAID,UAAWX,EAAQ,qEAAsEQ,IAEpGH,EAAUO,UAAW,GAoBtB,OAlBAF,GAAK,EAKJpB,EAFDgB,EAAO,GAEa,OADfE,EACuBM,EAEAC,GAE5BzB,EAAagB,EAAM,SAAUU,GAGxBpB,GACJN,EAAagB,EAAMV,EAAgBqB,GAGpCR,EAAMX,EAAkBM,GAAMc,OAEvBZ,EAQP,SAASQ,IACR,IAAIK,EACJ,GAAKZ,EACJ,MAAO,CACNa,MAAQ,GAKV,IAFAD,EAAMf,EAAIS,OACVH,GAAK,EACGA,EAAIS,QAAyB,IAAlBV,EAAKL,EAAKM,IAC5BA,GAAK,EAEN,OAAKA,GAAKS,GACTZ,GAAM,EACC,CACNa,MAAQ,IAGH,CACNC,MAASb,EAAIc,KAAMjB,EAASI,EAAKL,EAAKM,GAAKA,EAAGN,GAC9CgB,MAAQ,GAUV,SAASL,IACR,IAAII,EACJ,GAAKZ,EACJ,MAAO,CACNa,MAAQ,GAKV,IAFAD,EAAMf,EAAIS,OACVH,GAAK,EACGA,EAAIS,QAAyB,IAAlBV,EAAKL,EAAKM,IAC5BA,GAAK,EAEN,OAAKA,GAAKS,GACTZ,GAAM,EACC,CACNa,MAAQ,IAGH,CACNC,MAASZ,EAAKL,EAAKM,GACnBU,MAAQ,GAWV,SAASJ,EAAKK,GAEb,OADAd,GAAM,EACDK,UAAUC,OACP,CACNQ,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASH,IACR,OAAKT,EACGL,EAAsBC,EAAKI,EAAKH,GAEjCF,EAAsBC,KCtI/BmB,EALehC"}